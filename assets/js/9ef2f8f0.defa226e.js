"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[814],{4779:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>h,contentTitle:()=>k,default:()=>x,frontMatter:()=>v,metadata:()=>g,toc:()=>C});var n=t(7462),l=t(911),i=t(3905);const s='import React from \'react\';\nimport {ModalVideo, useToggle} from \'@baskvava/react-video-modal\';\n\nfunction Custom() {\n  const {isOpen, toggle, close} = useToggle();\n\n  return (\n    <div>\n      <h2>Custom Control Example</h2>\n      <button onClick={toggle} className="v-btn">\n        Click Me to Open Video Modal\n      </button>\n\n      <ModalVideo\n        title="video"\n        header="Fixed Width Video Modal"\n        width={800}\n        isOpen={isOpen}\n        onClosed={close}\n        url="https://storage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4"\n      />\n    </div>\n  );\n}\n\nexport default Custom;\n',a='import React from \'react\';\nimport {ModalVideo, useToggle} from \'@baskvava/react-video-modal\';\n\nfunction Default() {\n  const {isOpen, toggle, close} = useToggle();\n\n  return (\n    <div>\n      <h2>Default Control Example</h2>\n\n      <button onClick={toggle} className="v-btn">\n        Click Me to Open Video Modal\n      </button>\n\n      <ModalVideo\n        title="video"\n        width={800}\n        // highlight-next-line\n        controls="default"\n        isOpen={isOpen}\n        onClosed={close}\n        url="https://storage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4"\n      />\n    </div>\n  );\n}\n\nexport default Default;\n',d='import React from \'react\';\nimport {ModalVideo, useToggle} from \'@baskvava/react-video-modal\';\n\nfunction Hidden() {\n  const {isOpen, toggle, close} = useToggle();\n\n  return (\n    <div>\n      <h2>Hidden Control Example</h2>\n\n      <button onClick={toggle} className="v-btn">\n        Click Me to Open Video Modal\n      </button>\n\n      <ModalVideo\n        title="video"\n        width={800}\n        // highlight-next-line\n        controls="hidden"\n        isOpen={isOpen}\n        onClosed={close}\n        url="https://storage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4"\n      />\n    </div>\n  );\n}\n\nexport default Hidden;\n';var r=t(5961);const c=function(){const{isOpen:e,toggle:o,close:t}=(0,r.O)();return l.createElement("div",null,l.createElement("h2",null,"Custom Control Example"),l.createElement("button",{onClick:o,className:"v-btn"},"Click Me to Open Video Modal"),l.createElement(r.W,{title:"video",header:"Fixed Width Video Modal",width:800,isOpen:e,onClosed:t,url:"https://storage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4"}))};const p=function(){const{isOpen:e,toggle:o,close:t}=(0,r.O)();return l.createElement("div",null,l.createElement("h2",null,"Default Control Example"),l.createElement("button",{onClick:o,className:"v-btn"},"Click Me to Open Video Modal"),l.createElement(r.W,{title:"video",width:800,controls:"default",isOpen:e,onClosed:t,url:"https://storage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4"}))};const u=function(){const{isOpen:e,toggle:o,close:t}=(0,r.O)();return l.createElement("div",null,l.createElement("h2",null,"Hidden Control Example"),l.createElement("button",{onClick:o,className:"v-btn"},"Click Me to Open Video Modal"),l.createElement(r.W,{title:"video",width:800,controls:"hidden",isOpen:e,onClosed:t,url:"https://storage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4"}))};var m=t(9586);const v={},k="Video Controls",g={unversionedId:"how-controls",id:"how-controls",title:"Video Controls",description:"This is a nice feature to use custom controls if you don't like the native video control. Or even you don't display any control in your video",source:"@site/docs/how-controls.mdx",sourceDirName:".",slug:"/how-controls",permalink:"/react-video-modal/docs/how-controls",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/how-controls.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Hooks",permalink:"/react-video-modal/docs/hooks"},next:{title:"Fixed Width",permalink:"/react-video-modal/docs/use-fix-width"}},h={},C=[{value:"Props",id:"props",level:2},{value:"Cusomt Control",id:"cusomt-control",level:2},{value:"Native Control",id:"native-control",level:2},{value:"Hidden Control",id:"hidden-control",level:2}],f={toc:C},b="wrapper";function x(e){let{components:o,...t}=e;return(0,i.kt)(b,(0,n.Z)({},f,t,{components:o,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"video-controls"},"Video Controls"),(0,i.kt)("p",null,"This is a nice feature to use custom controls if you don't like the native video control. Or even you don't display any control in your video"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: This feature only support ",(0,i.kt)("inlineCode",{parentName:"p"},"video")," type. It's not support if you use ",(0,i.kt)("inlineCode",{parentName:"p"},"iframe"))),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"controls: 'custom' | 'default' | 'hidden'; // default is custom\n")),(0,i.kt)("h2",{id:"cusomt-control"},"Cusomt Control"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Don't need to add extra props, default is ",(0,i.kt)("inlineCode",{parentName:"p"},"custom")," for ",(0,i.kt)("inlineCode",{parentName:"p"},"controls")," props")),(0,i.kt)(c,{mdxType:"Custom"}),(0,i.kt)(m.Z,{language:"jsx",title:"/src/components/Controls/Custom.jsx",mdxType:"CodeBlock"},s),(0,i.kt)("h2",{id:"native-control"},"Native Control"),(0,i.kt)("p",null,"Set ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," value for ",(0,i.kt)("inlineCode",{parentName:"p"},"controls")," props"),(0,i.kt)(p,{mdxType:"Default"}),(0,i.kt)(m.Z,{language:"jsx",title:"/src/components/Controls/Default.jsx",mdxType:"CodeBlock"},a),(0,i.kt)("h2",{id:"hidden-control"},"Hidden Control"),(0,i.kt)("p",null,"We can also hide the control if we don't want to show it."),(0,i.kt)("p",null,"Set ",(0,i.kt)("inlineCode",{parentName:"p"},"hidden")," value for ",(0,i.kt)("inlineCode",{parentName:"p"},"controls")," props"),(0,i.kt)(u,{mdxType:"Hidden"}),(0,i.kt)(m.Z,{language:"jsx",title:"/src/components/Controls/Hidden.jsx",mdxType:"CodeBlock"},d))}x.isMDXComponent=!0}}]);