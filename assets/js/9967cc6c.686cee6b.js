"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[73],{1380:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>p,contentTitle:()=>c,default:()=>v,frontMatter:()=>d,metadata:()=>u,toc:()=>h});var n=t(7462),s=t(911),l=t(3905);const a='import React from \'react\';\nimport {ModalVideo, useToggle} from \'@baskvava/react-video-modal\';\n\nfunction UseToogle() {\n  // highlight-start\n  const {isOpen, toggle, close} = useToggle();\n  // highlight-end\n\n  return (\n    <div>\n      <h2>UseToogle Example</h2>\n      <button\n        // highlight-next-line\n        onClick={toggle}\n        className="v-btn">\n        Click Me to Open Video Modal\n      </button>\n      <ModalVideo\n        title="video"\n        header="useToggle"\n        width={800}\n        // highlight-next-line\n        isOpen={isOpen}\n        // highlight-next-line\n        onClosed={close}\n        url="https://storage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4"\n      />\n    </div>\n  );\n}\n\nexport default UseToogle;\n';var i=t(5961);const r=function(){const{isOpen:e,toggle:o,close:t}=(0,i.O)();return s.createElement("div",null,s.createElement("h2",null,"UseToogle Example"),s.createElement("button",{onClick:o,className:"v-btn"},"Click Me to Open Video Modal"),s.createElement(i.W,{title:"video",header:"useToggle",width:800,isOpen:e,onClosed:t,url:"https://storage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4"}))};var g=t(9586);const d={},c="Hooks",u={unversionedId:"hooks",id:"hooks",title:"Hooks",description:"We provide the following custom hooks for easily use toggle and manage its state",source:"@site/docs/hooks.mdx",sourceDirName:".",slug:"/hooks",permalink:"/react-video-modal/docs/hooks",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/hooks.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/react-video-modal/docs/getting-started"},next:{title:"Video Controls",permalink:"/react-video-modal/docs/how-controls"}},p={},h=[{value:"UseToogle",id:"usetoogle",level:2},{value:"Usage",id:"usage",level:2}],m={toc:h},k="wrapper";function v(e){let{components:o,...t}=e;return(0,l.kt)(k,(0,n.Z)({},m,t,{components:o,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"hooks"},"Hooks"),(0,l.kt)("p",null,"We provide the following custom hooks for easily use toggle and manage its state"),(0,l.kt)("h2",{id:"usetoogle"},"UseToogle"),(0,l.kt)("p",null,"We provide the powerful custom hook to control the modal close/open state"),(0,l.kt)("p",null,"Here is the inerface of useToggle return type"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"interface UseToggleReturnType {\n  isOpen: boolean; // default is false\n  toggle: () => void; // toggle isOpen\n  close: () => void; // close the modal, always set isOpen as false\n}\n")),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)(r,{mdxType:"UseToggle"}),(0,l.kt)(g.Z,{language:"jsx",title:"/src/components/hooks/UseToggle.jsx",mdxType:"CodeBlock"},a))}v.isMDXComponent=!0}}]);